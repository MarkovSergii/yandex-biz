function savecoordinats(){var t=[MarkCoords[0].toFixed(4),MarkCoords[1].toFixed(4)],e=[(MarkCoords[0]-deltaX).toFixed(4),(MarkCoords[1]-deltaY).toFixed(4)],a=[(MarkCoords[0]-deltaX).toFixed(4),(MarkCoords[1]+deltaY).toFixed(4)],r=[(MarkCoords[0]+deltaX).toFixed(4),(MarkCoords[1]-deltaY).toFixed(4)],o=[(MarkCoords[0]+deltaX).toFixed(4),(MarkCoords[1]+deltaY).toFixed(4)];myPlacemark.getOverlay().getData().geometry.setCoordinates(t),myPlacemark_buttom_left.getOverlay().getData().geometry.setCoordinates(e),myPlacemark_buttom_right.getOverlay().getData().geometry.setCoordinates(a),myPlacemark_top_left.getOverlay().getData().geometry.setCoordinates(r),myPlacemark_top_right.getOverlay().getData().geometry.setCoordinates(o),$("#lat").text(t[0]),$("#long").text(t[1])}var deltaX=.05,deltaY=.05,zone=.05,startX=50.450846,startY=30.405572,myMap,MarkCoords,myPlacemark,myPlacemark_buttom_left,myPlacemark_buttom_right,myPlacemark_top_left,myPlacemark_top_right;MarkCoords=[startX,startY],$(document).ready(function(){function t(){myMap=new ymaps.Map("YMapsID",{center:[startX,startY],zoom:11}),myMap.controls.add("zoomControl"),myPlacemark=new ymaps.Placemark([startX,startY],{},{preset:"twirl#redIcon",draggable:!0}),myPlacemark_buttom_left=new ymaps.Placemark([startX-deltaX,startX-deltaY],{},{preset:"twirl#blueIcon",draggable:!1}),myPlacemark_buttom_right=new ymaps.Placemark([startX-deltaX,startY+deltaY],{},{preset:"twirl#blueIcon",draggable:!1}),myPlacemark_top_left=new ymaps.Placemark([startX+deltaX,startX-deltaY],{},{preset:"twirl#blueIcon",draggable:!1}),myPlacemark_top_right=new ymaps.Placemark([startX+deltaX,startY+deltaY],{},{preset:"twirl#blueIcon",draggable:!1}),myMap.geoObjects.add(myPlacemark),myMap.geoObjects.add(myPlacemark_buttom_left),myMap.geoObjects.add(myPlacemark_buttom_right),myMap.geoObjects.add(myPlacemark_top_left),myMap.geoObjects.add(myPlacemark_top_right),savecoordinats(),myPlacemark.events.add("dragend",function(t){MarkCoords=this.geometry.getCoordinates(),savecoordinats()},myPlacemark),myMap.events.add("click",function(t){MarkCoords=t.get("coordPosition"),savecoordinats()}),myMap.events.add("boundschange",function(t){t.get("newZoom")!=t.get("oldZoom")&&savecoordinats(),t.get("newCenter")!=t.get("oldCenter")&&savecoordinats()})}ymaps.ready(t)});var result_mas=[],result_count=result_mas.length,CSV=function(t){var e=Object.keys(t[0]),a=e.join(";")+"\n";return t.forEach(function(t){e.forEach(function(e,r){r&&(a+=";"),a+=t[e]}),a+="\n"}),a},check_for_dubles=function(t){for(var e=[],a=0;a<t.length;a++){for(var r=0;r<result_mas.length;r++){var o=!1;if(result_mas[r].id==t[a].id){o=!0;break}}o||e.push(t[a])}return e},structure_date=function(t){if(t){var e="";return Array.isArray(t)?t.forEach(function(t,a,r){e=t.formatted?e+t.formatted+",":t.href?e+t.href+",":e+t.name+","}):e="object"==typeof t?t.name:t,e}return""},getCorrectData=function(t){var e=[];return t.features.forEach(function(t){var a={};a.id=t.properties.CompanyMetaData.id,a.name=t.properties.CompanyMetaData.name,a.address=t.properties.CompanyMetaData.address,a.url=structure_date(t.properties.CompanyMetaData.url),a.Categories=structure_date(t.properties.CompanyMetaData.Categories),a.Phones=structure_date(t.properties.CompanyMetaData.Phones),a.Links=structure_date(t.properties.CompanyMetaData.Links),a.postalCode=structure_date(t.properties.CompanyMetaData.postalCode),a.email=structure_date(t.properties.CompanyMetaData.email),a.emails=structure_date(t.properties.CompanyMetaData.emails),e.push(a)}),e},ckeck_cookie_api=function(){return api=$.cookie("api_key")};$(document).ready(function(){alert("heelo"),function(){ckeck_cookie_api()&&$("#api_key").val(ckeck_cookie_api()),$("#obl").mask("0.00"),$("#obl").val(zone)}(),$("#btn_get_data").click(function(){var t=$("#lat").text(),e=$("#long").text(),a=$("#obl").val(),r=$("#search_text").val(),o=$("#api_key").val();if(""!=r&&""!=o){if($("#save_api").prop("checked")){var s=ckeck_cookie_api();s?s!=o&&$.cookie("api_key",o):$.cookie("api_key",o)}$.get("https://search-maps.yandex.ru/v1/?text="+encodeURIComponent(r)+"&ll="+e+","+t+"&spn="+a+","+a+"&type=biz&results=500&rspn=1&lang=ru_RU&apikey="+o,function(t){if(t.status)"error"==t.status&&swal("Error!","Ошибка или лимит","error");else{var e=getCorrectData(t);result_mas=result_mas.concat(check_for_dubles(e)),result_count=result_mas.length,swal("Успех","Найдено "+e.length+" компаний"),$("#result_count").text(result_count)}}).fail(function(){swal("Error!","Ошибка","error")})}else swal("Error!","Нужно ввести поисковую фразу и API ключ","error")}),$("#set_obl_btn").click(function(){zone=$("#obl").val(),deltaX=Number(zone),deltaY=Number(zone),savecoordinats()}),$("#save_all").click(function(){_.isEmpty(result_mas)?swal("Внимание!","Масив с данными пустой","warning"):swal({title:"Сохранение!",text:"Введите имя файла для сохранения:",type:"input",showCancelButton:!0,closeOnConfirm:!1,animation:"slide-from-top",inputPlaceholder:"Имя файла"},function(t){if(t===!1)return!1;if(""===t)return swal.showInputError("Необходимо ввести имя!"),!1;var e=new Blob([CSV(result_mas)],{type:"text/plain;charset=utf-8"});saveAs(e,t+".csv"),swal("Отлично!","Успешно сохранено","success")})}),$("#show_all").click(function(){if(_.isEmpty(result_mas))swal("Внимание!","Масив с данными пустой","warning");else{var t=window.open("newpage.html","_blank");$.get("table.html",function(e){var a=_.template(e);t.document.write(a({company:result_mas})),t.document.close()})}}),$("#delete_all").click(function(){swal({title:"Вы уверены?",text:"Все данные будут удалены",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Да, удалить!",cancelButtonText:"Отмена",closeOnConfirm:!1},function(){result_mas=[],result_count=result_mas.length,$("#result_count").text(result_count),swal({title:"Удалено!",text:"Можете приступать к новой добыче :).",type:"success",timer:1e3})})})});
//# sourceMappingURL=data:application/json;base64,
